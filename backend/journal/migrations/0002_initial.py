# Generated by Django 5.2.5 on 2025-08-11 10:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('journal', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='author',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Добавлено пользователем'),
        ),
        migrations.AddField(
            model_name='book',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='journal.author', verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='book',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Добавлено пользователем'),
        ),
        migrations.AddField(
            model_name='booklog',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_logs', to='journal.book', verbose_name='Книга'),
        ),
        migrations.AddField(
            model_name='genre',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Добавлено пользователем'),
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='journal.genre', verbose_name='Жанр'),
        ),
        migrations.AddField(
            model_name='like',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='quote',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='journal.book', verbose_name='Книга'),
        ),
        migrations.AddField(
            model_name='quote',
            name='book_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='journal.booklog', verbose_name='Запись читателького журнала'),
        ),
        migrations.AddField(
            model_name='quote',
            name='likes',
            field=models.ManyToManyField(related_name='liked_quotes', through='journal.Like', to=settings.AUTH_USER_MODEL, verbose_name='Понравилось'),
        ),
        migrations.AddField(
            model_name='like',
            name='quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_records', to='journal.quote', verbose_name='Цитата'),
        ),
        migrations.AddField(
            model_name='share',
            name='quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_records', to='journal.quote', verbose_name='Цитата'),
        ),
        migrations.AddField(
            model_name='share',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='quote',
            name='shared',
            field=models.ManyToManyField(related_name='shared_quotes', through='journal.Share', to=settings.AUTH_USER_MODEL, verbose_name='Поделились'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'quote')},
        ),
        migrations.AddIndex(
            model_name='share',
            index=models.Index(fields=['moment'], name='journal_sha_moment_69e74b_idx'),
        ),
    ]
